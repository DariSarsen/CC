version: '3.8'

services:
  # Бэкенд сервис
  backend:
    build:
      context: ./backend      # ИЗМЕНЕНО: Контекст теперь указывает на папку backend
      dockerfile: Dockerfile    # ИЗМЕНЕНО: Dockerfile находится в корне этого контекста
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy # УЛУЧШЕНО: Ждем, пока база данных будет готова
    networks:
      - app-network
    command: sh -c "npx sequelize-cli db:migrate && npx sequelize-cli db:seed:all && npm start"

  # Фронтенд сервис
  frontend:
    build:
      context: ./frontend     # ИЗМЕНЕНО: Контекст теперь указывает на папку frontend
      dockerfile: Dockerfile    # ИЗМЕНЕНО: Dockerfile находится в корне этого контекста
    ports:
      - "5173:5173"
    networks:
      - app-network

  # PostgreSQL сервис
  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      # Этот volume больше не нужен для инициализации, так как миграции запускаются командой
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NGINX сервис
  nginx:
    image: nginx:latest
    ports:
      - "80:80"  # Внешний порт 80 для доступа к сайту
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
